Grand Test-4 

This is Grand Test-4 which consists of 7 coding challenges. You are required to attempt any 4 questions out of the 7. Each question carries 25 marks.  

Duration:  3 hours  

Challenge- 1: 

As a manager of a book shop, you are responsible for managing all the operations related to books in the shop. You have a system that stores all the book details(book_id, title, author, price) in an ArrayList of Book objects. 

Your task is to create a Java program that helps you manage the book shop efficiently.  

Create a console-based menu-driven program that allows the user to perform the following operations: 

1. Add books 

2. Calculate total price of all books 

3. Remove a book by book_id 

4. Update book price by book_id 

5. Search books by author 

6. Quit the program 

If no books are found for the given author name, the method should throw a custom exception called BookNotFoundException with an appropriate error message. 

Each menu option should call the corresponding method and display the results or appropriate error messages. 

Challenge- 2: 

You have been tasked with creating a dictionary program in Java that stores words and their definitions using a hash map. The program should allow the user to add new words and definitions, view the definitions of existing words. Additionally, the program should handle exceptions when adding a word that already exists in the dictionary or trying to view the definition of a non-existent word.  

Create a console-based menu-driven program that allows the user to perform the following operations: 

1. Add Word and its definition 

2. View Definition 

3. Number of Words 

4. Search Words 

5. Exit 

Depending on the user's choice, prompt the user for the necessary inputs and call the appropriate methods to perform the required action. 

Challenge- 3: 

You have been assigned the task of creating a program that implements a stack using an array in java. 

The program should include error handling to handle any exceptions that may arise during the execution.  

You need to test the program with various inputs and ensure that it works as expected. 

The program should accept the following commands from the user: 

1. push <value>: Add an element to the top of the stack 

2. pop: Remove the element at the top of the stack 

3. peek: Display the element at the top of the stack 

4. display: Display all the elements in the stack 

5. exit: Terminate the program 

For push and pop commands, the program should display the stack after the operation, along with any error messages if the stack is full or empty. 

For peek and display commands, the program should display the element(s) or the entire stack, along with any error messages if the stack is empty. 

The program should terminate gracefully when the user enters the exit command. 

Challenge-4: 

You are creating a program to keep track of a list of tasks for a project. Each task has a unique ID, a name, a description, a due date, and a status (e.g. "in progress", "completed", "overdue"). You decide to use a HashSet to store the task IDs, and you need to implement some functionality for adding and removing tasks from the list, as well as updating the status of a task. Write a Java program that implements the following: 

1. Add Task 

2. Remove Task 

3. Update status of Task 

4. Display all the Tasks 

5. Display "in progress" Tasks 

6. Display "completed" tasks 

7. Display "overdue" tasks 

Challenge-5: 

Mike was enthusiastic to attend the "Kracker Jack Fun Fair 2023" and couldn't wait to participate in the Number Challenge. Being a math expert, he was given a string D of numbers that only contained 0's and 1's. The challenge was to change exactly one digit from the given string to make all the digits in the string the same. If it was possible to make all the digits equal by flipping only one digit, he had to output "Yes". If it was not possible, he had to output "No". Can you write a program to help Mike win the challenge? 

Input Format: 

The first and only input contains a string D consisting of only 0's and 1's. 

Output Format: 

Output "Yes" if it is possible to make all digits in the string the same by flipping exactly one digit. Otherwise, output "No". 

Refer to the sample input and output for formatting specifications. 

Sample Input 1: 

101 

Sample Output 1: 

Yes 

Sample Input 2: 

11 

Sample Output 2: 

No 

Challenge- 6: 

You are given a sorted array of integers, and you are asked to find the closest element to a given target value. Write a modified version of the binary search algorithm that returns the closest element to the target value.If the element is not found or the array is empty, it should return -1. 

Here's a sample input and output for the above question: 

--------------------------------------------------------------- 

Test Case 1:  

Input: 

Sorted array: [1, 3, 6, 7, 9] 

Target value: 4 

Output: 

Closest element: 3 

Test Case 2: 

Input: 

Sorted array: [2, 4, 6, 8, 10] 

Target value: 9 

Output: 

Closest element: 8 

Test Case 3: 

Input: 

Sorted array: [4, 6, 8] 

Target value: 10 

Output: 

Closest element: -1 

Challenge-7: 

Write a program to find a target element in a given array using the binary search technique. The program should then check if the target element is a prime number or not and print an appropriate message. 

Here's a sample input and output for the above question: 

------------------------------------------------------------- 

Sample Input: 

A = [23,45,67,78,86,90] 

Target element is: 67 

Expected Output: 

67 is present in 2nd index position and it is a prime number 

Sample Input: 

A = [23,45,67,78,86,90] 

Target element is: 86 

Expected Output: 

86 is present in 4th index position and it is not a prime number 

 

 

 

 